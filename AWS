VPC 생성하기 (VPC)
"VPC 생성"
1. "생성할 리소스" : "VPC 등"
2. "이름 태그 자동 생성" : "자동 생성"
3. "가용 영역(AZ) 수" : "2", "첫 번째 가용 영역" : "ap-northeast-2a", "두 번째 가용 영역" : "ap-northeast-2b"
4. "퍼블릭 서브넷 수" : "2", "프라이빗 서브넷 수" : 2
5. "NAT 게이트웨이($)" : "1개의 AZ에서"
6. "VPC 엔드포인트" : "없음"

EC2 역할 생성하기 (IAM > 역할)
"역할 생성"
1. "신뢰할 수 있는 엔터티 유형" : "AWS 서비스"
2. "서비스 또는 사용 사례" : "EC2", "사용 사례" : "EC2"
3. "권한 정책" : "AdministratorAccess"
4. "역할 이름" : "AdministratorAccess-EC2-Role"

EC2 생성하기 (인스턴스)
"인스턴스 시작"
1. "이름" : "my-bastion"
2. "Amazon Machine Image(AMI)" : "Amazon Linux 2 AMI (HVM) - Kernel 5.10, SSD Volume Type"
3. "인스턴스 유형" : "t2.micro"
4. "새 키 페어 생성"
5. "네트워크 설정" : "편집", "VPC" : <아까 만든 VPC>
6. "서브넷" : "public1-ap-northeast-2a"
7. "퍼블릭 IP 자동 할당" : "활성화"
8. "방화벽(보안 그룹)" : "보안 그룹 생성"
9. "IAM 인스턴스 프로파일" : "AdministratorAccess-EC2-Role"

탄력적 IP 생성하기 (탄력적 IP 주소)
"탄력적 IP 주소 할당"
1. "탄력적 IP 주소가 할당되었습니다." : "이 탄력적 IP 주소 연결"
2. "인스턴스" : <아까 만든 EC2>
3. "프라이빗 IP 주소" : <아까 만든 EC2 프라이빗 IP 주소>

EC2 재부팅하기 (인스턴스)
<만든 인스턴스 체크> -> "인스턴스 상태" -> "재부팅"

EC2 터미널 연결하기 (터미널)
"터미널"
1. "ssh -i <키 페어> ec2-user@<인스턴스 퍼블릭 IP 주소>"

EC2 패키지 설치하기 (터미널)
"터미널"
1. "sudo su" : "루트 사용자로 전환"
2. "https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/getting-started-install.html" : "링크 들어가서 AWS CLI Linux 설치"
3. "yum install jq -y" : jq 설치
4. "yum install curl" : curl 설치

S3 버킷 생성하기 (Amazon S3 > 버킷)
"버킷 생성하기"
1. "버킷 이름" : "my-data-s3-<비번호>"

S3 버킷 폴더 생성하기 (Amazon S3 > 버킷 > my-data-s3-<비번호>)
"폴더 생성하기'
1. "폴더 이름" : "data"
"폴더 생성하기"
2. "폴더 이름" : "script"
"폴더 생성하기"
3. "폴더 이름" : "output"

S3 버킷 폴더 안에 배포 파일 생성하기 (Amazon S3 > 버킷 > my-data-s3-<비번호>)
"data/"
1. "data.csv" 업로드 하기

Lambda 역할 생성하기 (IAM > 역할)
"역할 생성"
1. "신뢰할 수 있는 엔터티 유형" : "AWS 서비스"
2. "서비스 또는 사용 사례" : "Lambda", "사용 사례" : "Lambda"
3. "권한 정책" : "AdministratorAccess"
4. "역할 이름" : "AdministratorAccess-Lambda-Role"

Lambda 함수 생성하기 (Lambda > 함수)
"함수 생성"
1. "다음 옵션 중 하나를 선택하여 함수를 생성합니다." : "새로 작성"
2. "함수 이름" : "data-function"
3. "런타임" : "Python 3.9"
4. "실행 역할" : "기존 역할 사용"
5. "기존 역할" : "AdministratorAccess-Lambda-Role"

Lambda 함수에서 트리거 생성하기 (Lambda > 함수 > data-function)
"트리거 추가"
1. "트리거 구성" : "S3"
2. "버킷" : "s3/my-data-s3-<비번호>"
3. "이벤트 유형" : "PUT"
4. "접두사" : "data/"
5. "접미사" : ".csv"

Lambda 함수에서 배포파일 코드 소스 수정하기 (Lambda > 함수 > data-function)
"코드" -> "코드 소스"
1. "data-function.py" 파일 수정하기
2. "s3://my-data-s3-101/script/script.py" : "s3://my-data-s3-<비번호>/script/script.py" 이렇게 수정하기
3. 수정한 파일을 복사하여 Lambda 함수 코드 소스에 붙여넣기

Lambda 함수에서 배포파일 코드 소스 이름 수정하기 (Lambda > 함수 > data-function)
"코드" -> "코드 소스"
1. "lambda_function.py" : "data-function.py" 로 이름 수정하기

Lambda 함수에서 핸들러 수정하기 (Lambda > 함수 > data-function)
"코드" -> "런타임 설정" -> "편집"
1. "핸들러" : "<파일 이름>.<함수 이름>"

Lambda 함수에서 제한 시간 1분으로 수정하기 (Lambda > 함수 > data-function)
"구성" -> "일반 구성" -> "편집"
1. "제한 시간" : "1분"

Glue job 역할 생성하기 (IAM > 역할)
"역할 생성"
1. "신뢰할 수 있는 엔터티 유형" : "AWS 서비스"
2. "서비스 또는 사용 사례" : "Glue", "사용 사례" : "Glue"
3. "권한 정책" : "AdministratorAccess"
4. "역할 이름" : "AdministratorAccess-Glue-Role"

Glue job 생성하기 (AWS Glue > Jobs)
"ETL jobs" -> "Create job" -> "Script editor"
1. "Engine" : "Spark"
2. "Options" : "Start fresh"

Glue job 생성하기, 코드 수정하기 ("Script", "Job details", "Runs", "Data quality", "Schedules", "Version Control")
"Script"
1. "script.py" 배포파일 복사하여 "script"에 붙여넣기
2. "s3://my-data-s3-101/data/data.csv" : "s3://my-data-s3-<비번호>/data/data.csv" 이렇게 수정하기\
3. "s3://my-data-s3-101/output/" : "s3://my-data-s3-<비번호>/output/" 이렇게 수정하기

Glue job 생성하기 ("Script", "Job details", "Runs", "Data quality", "Schedules", "Version Control")
"Job details"
1. "Name" : "my-glue-job"
2. "IAM Role" : "AdministratorAccess-Glue-Role"
3. "Script filename" : "script.py"
4. "Script path" : "s3://my-data-s3-<비번호>/script/"

Database 생성하기 (AWS Glue > Databases)
"Add database"
1. "Name" : "my-database"

Crawlers 생성하기 (AWS Glue > Crawlers)
"Create crawler"
1. "Name" : "convert-crawler"
2. "Data source configuration" : "Not yet"
3. "Data sources" : "Add a data source"
4. "S3 path" : "s3://my-data-s3-5321/output/"
5. "Subsequent crawler runs" : "Crawl all sub-folders"
6. "Existing IAM role" : "AdministratorAccess-Glue-Role"
7. "Target database" : "my-database"
8. "Table name prefix" : "convert_"
9. "Tables" 생성 확인하기































